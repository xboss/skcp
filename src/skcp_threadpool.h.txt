// #ifndef _SKCP_THREADPOOL_H
// #define _SKCP_THREADPOOL_H

// #include <pthread.h>

// #include "skcp_queue.h"

// typedef struct {
//     void (*fun)(void *args);
//     void *args;
// } skcp_tp_task_t;

// typedef struct {
//     skcp_queue_t *task_q;
//     // pthread_t m_tid;
//     pthread_t *tids;
//     int thread_num;
//     // int min_num;
//     // int max_num;
//     // int busy_num;
//     // int live_num;
//     // int exit_num;
//     int shutdown;  // 1: shutdown; 0: not shutdown;
// } skcp_threadpool_t;

// skcp_threadpool_t *skcp_tp_init(int thread_num);
// void skcp_tp_free(skcp_threadpool_t *pool);
// int skcp_tp_add_task(skcp_threadpool_t *pool, skcp_tp_task_t *task);
// // void skcp_tp_run(skcp_threadpool_t *pool);
// // void skcp_tp_stop(skcp_threadpool_t *pool);

// #endif  // SKCP_THREADPOOL_H